template:
    name: 
        {
            pt: 'Quebra de controle de acesso',
            en: 'Broken access control'
        }
    type: Web
    category: 'Lack of Access Control'
    subcategory: 'Broken Access Control'
    description: 
        { 
            pt: 'Em sua essência, o Broken Access Control é simplesmente um cenário no qual os invasores podem acessar, modificar, excluir ou executar ações fora das permissões pretendidas de um aplicativo ou sistema. Muitas vulnerabilidades podem ser classificadas como uma forma de quebra de controle de acesso, como quando usuários normais podem acessar recursos somente administrativos alterando parâmetros em uma URL, visualizando ou modificando os dados de outro usuário ou o escalonamento de privilégios.', 
            en: 'At its core, Broken Access Control is simply a scenario where attackers can access, modify, delete, or perform actions outside an application or system''s intended permissions. Many vulnerabilities can be classified as a form of access control breach, such as when normal users can access administrative-only resources by changing parameters in a URL, viewing or modifying another user''s data, or escalating privileges.' 
        }
    recomendation: 
        { 
            pt: "As vulnerabilidades de controle de acesso geralmente podem ser evitadas adotando uma abordagem de defesa em profundidade e aplicando os seguintes princípios:\r\nNunca confie apenas na ofuscação para controle de acesso.\r\nA menos que um recurso seja acessível publicamente, negue o acesso por padrão.\r\nSempre que possível, use um único mecanismo em todo o aplicativo para impor controles de acesso.\r\nNo nível do código, torne obrigatório que os desenvolvedores declarem o acesso permitido para cada recurso e negue o acesso por padrão.\r\nFaça uma auditoria e teste minuciosos dos controles de acesso para garantir que estejam funcionando conforme o planejado.", 
            en: 'Access control vulnerabilities can often be avoided by taking a defense-in-depth approach and applying the following principles: Never rely solely on obfuscation for access control. Unless a resource is publicly accessible, deny access by default. Whenever possible, use a single application-wide mechanism to enforce access controls. At the code level, make it mandatory for developers to declare allowed access for each resource and deny access by default. Thoroughly audit and test access controls to ensure they are working as intended.' 
        }
    references: ['https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control']
