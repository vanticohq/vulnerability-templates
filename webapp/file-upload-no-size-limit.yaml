template:
    name: 
        {
            pt: 'Upload de arquivos sem limite de tamanho',
            en: 'File upload no size limit'
        }
    type: Web
    category: 'Server Security Misconfiguration'
    subcategory: 'Unsafe File Upload'
    description: 
        { 
            pt: 'Uploads de arquivos inseguros ocorrem quando o servidor web não valida de forma correta o tamanho, tipo, nome, conteúdo ou restrições colocadas no arquivo após o upload bem-sucedido. Um atacante pode tentar um ataque de Negação de Serviço (DoS) na aplicação fazendo upload de arquivos grandes no servidor, pois não há limite de tamanho de arquivo. Isso pode causar interrupções e desacelerações.', 
            en: 'Unsafe file uploads occur when the web server fails to sufficiently validate the file’s size, type, name, contents, or what restrictions are placed on the file once it has been successfully uploaded. The application fails to validate the size of files that are uploaded. An attacker can serve a Denial of Service (DoS) to the application by uploading large files to the server as there is no file size limit. This may cause outages and slowdowns.' 
        }
    recomendation: 
        { 
            pt: "Em resumo, os seguintes princípios devem ser seguidos para alcançar uma implementação segura de upload de arquivos:\r\n\r\nListe as extensões permitidas. Permita apenas extensões seguras e críticas para a funcionalidade do negócio.\r\nCertifique-se de que a validação de entrada é aplicada antes da validação das extensões.\r\nValide o tipo de arquivo, não confie no cabeçalho Content-Type, pois ele pode ser falsificado.\r\nAltere o nome do arquivo para algo gerado pela aplicação.\r\nDefina um limite de comprimento de nome de arquivo. Restrinja os caracteres permitidos, se possível.\r\nDefina um limite de tamanho de arquivo.\r\nPermita apenas usuários autorizados a fazer upload de arquivos.\r\nArmazene os arquivos em um servidor diferente. Se isso não for possível, armazene-os fora da raiz do diretório web.\r\nNo caso de acesso público aos arquivos, use um manipulador que seja mapeado para nomes de arquivos dentro da aplicação (algumid -> arquivo.ext).\r\nExecute o arquivo através de um antivírus ou uma sandbox, se disponível, para validar que ele não contém dados maliciosos.\r\nCertifique-se de que quaisquer bibliotecas utilizadas estão configuradas de forma segura e são mantidas atualizadas.", 
            en: "In short, the following principles should be followed to reach a secure file upload implementation:\r\n\r\nList allowed extensions. Only allow safe and critical extensions for business functionality\r\nEnsure that input validation is applied before validating the extensions.\r\nValidate the file type, don't trust the Content-Type header as it can be spoofed\r\nChange the filename to something generated by the application\r\nSet a filename length limit. Restrict the allowed characters if possible\r\nSet a file size limit\r\nOnly allow authorized users to upload files\r\nStore the files on a different server. If that's not possible, store them outside of the webroot\r\nIn the case of public access to the files, use a handler that gets mapped to filenames inside the application (someid -> file.ext)\r\nRun the file through an antivirus or a sandbox if available to validate that it doesn't contain malicious data\r\nEnsure that any libraries used are securely configured and kept up to date" 
        }
    references: ['https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html ']
