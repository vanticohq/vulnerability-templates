template:
    name: 
        {
            pt: 'Armazenamento de senhas com HASH MD5',
            en: 'MD5 password storage'
        }
    type: Web
    category: 'Broken Cryptography'
    subcategory: 'Cryptographic Flaw'
    description: 
        { 
            pt: 'MD5 é um algoritmo de hash criptográfico que é conhecido por ser vulnerável a ataques de colisão, onde dois conjuntos de dados diferentes geram o mesmo hash. Além disso, MD5 é muito rápido e fácil de ser quebrado por ataques de força bruta e dicionário, o que significa que um atacante pode facilmente gerar uma lista de hashes possíveis e compará-los com o hash armazenado para encontrar a mensagem original. Essa vulnerabilidade é explorada por atacantes para comprometer a integridade da mensagem, como alterar arquivos ou o conteúdo de uma página da web. Além disso, MD5 é frequentemente usado para armazenar senhas, mas isso é inseguro porque a velocidade e a eficácia dos ataques de força bruta e dicionário podem ser usados para recuperar as senhas originais a partir dos hashes MD5. Por essas razões, o uso de MD5 para criptografia é considerado inseguro e não recomendado.', 
            en: 'MD5 is a cryptographic hashing algorithm that is known to be vulnerable to collision attacks, where two different sets of data generate the same hash. Furthermore, MD5 is very fast and easy to crack by brute-force and dictionary attacks, meaning an attacker can easily generate a list of possible hashes and compare them to the stored hash to find the original message. This vulnerability is exploited by attackers to compromise message integrity, such as altering files or the content of a webpage. Furthermore, MD5 is often used to store passwords, but this is insecure because the speed and effectiveness of brute force and dictionary attacks can be used to recover original passwords from MD5 hashes. For these reasons, using MD5 for encryption is considered insecure and not recommended.' 
        }
    recomendation: 
        { 
            pt: "É recomendável usar algoritmos de hash mais fortes, como SHA-256 ou SHA-3, que são mais resistentes a ataques de colisão e força bruta. Se o uso do MD5 for inevitável, pode-se adicionar um salt (um valor aleatório adicionado à mensagem antes de ser criptografada) para dificultar a reversão do hash e usar uma abordagem de iteração (executando o hash várias vezes em uma função iterativa) para aumentar a segurança. Além disso, é importante manter o software atualizado com as últimas correções de segurança e garantir que as senhas sejam armazenadas de forma segura, usando técnicas como o armazenamento em hash com salt. Por fim, é importante educar os usuários para escolher senhas fortes e exclusivas para evitar ataques de força bruta e dicionário.\r\n", 
            en: 'We recommend using stronger hashing algorithms, such as SHA-256 or SHA-3, which are more resistant to collision and brute force attacks. If using MD5 is unavoidable, one can add a salt (a random value added to the message before it is encrypted) to make it difficult to reverse the hash, and use an iteration approach (performing the hash multiple times in an iterative function) to increase security. In addition, it is important to keep software up to date with the latest security fixes and ensure that passwords are stored securely using techniques such as salted hashing. Finally, it is important to educate users to choose strong and unique passwords to avoid brute force and dictionary attacks.' 
        }
    references: ['https://csrc.nist.gov/projects/hash-functions , https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html ']
